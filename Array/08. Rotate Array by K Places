Link: https://leetcode.com/problems/rotate-array/description/     (For Right)


class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        k = k % n;                                                   // Calculate the effective rotation amount (in case k is greater than the array size)                                         
        reverse(nums.begin(), nums.begin() + n - k);                // Reverse the first portion of the array (from the beginning to n-k-1)
        reverse(nums.begin() + n - k, nums.end());                 // Reverse the second portion of the array (from n-k to the end) 
        reverse(nums.begin(), nums.end());                        // Reverse the entire array to complete the rotation
    }
};



Link:   https://practice.geeksforgeeks.org/problems/rotate-array-by-n-elements-1587115621/1     (for Left)

void rotateArr(int arr[], int d, int n) {
    d = d % n;                          // Calculate the effective rotation amount (in case d is greater than the array size)
    reverse(arr, arr + d);                // Reverse the first portion of the array (from the beginning to d-1)
    reverse(arr + d, arr + n);            // Reverse the second portion of the array (from d to the end)
    reverse(arr, arr + n);                 // Reverse the entire array to complete the rotation
}

    
